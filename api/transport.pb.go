// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.9.2
// source: transport.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SalesType int32

const (
	SalesType_sale    SalesType = 0
	SalesType_rent    SalesType = 1
	SalesType_leasing SalesType = 2
)

// Enum value maps for SalesType.
var (
	SalesType_name = map[int32]string{
		0: "sale",
		1: "rent",
		2: "leasing",
	}
	SalesType_value = map[string]int32{
		"sale":    0,
		"rent":    1,
		"leasing": 2,
	}
)

func (x SalesType) Enum() *SalesType {
	p := new(SalesType)
	*p = x
	return p
}

func (x SalesType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SalesType) Descriptor() protoreflect.EnumDescriptor {
	return file_transport_proto_enumTypes[0].Descriptor()
}

func (SalesType) Type() protoreflect.EnumType {
	return &file_transport_proto_enumTypes[0]
}

func (x SalesType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SalesType.Descriptor instead.
func (SalesType) EnumDescriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{0}
}

type Transport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Type             SalesType              `protobuf:"varint,4,opt,name=type,proto3,enum=api.SalesType" json:"type,omitempty"`
	Brand            uint64                 `protobuf:"varint,5,opt,name=brand,proto3" json:"brand,omitempty"`
	TransportType    uint64                 `protobuf:"varint,6,opt,name=transportType,proto3" json:"transportType,omitempty"`
	Model            string                 `protobuf:"bytes,7,opt,name=model,proto3" json:"model,omitempty"`
	ReleaseYear      string                 `protobuf:"bytes,8,opt,name=releaseYear,proto3" json:"releaseYear,omitempty"`
	Engine           uint32                 `protobuf:"varint,9,opt,name=engine,proto3" json:"engine,omitempty"`
	Transmission     string                 `protobuf:"bytes,10,opt,name=transmission,proto3" json:"transmission,omitempty"`
	Mileage          uint64                 `protobuf:"varint,11,opt,name=mileage,proto3" json:"mileage,omitempty"`
	FuelType         string                 `protobuf:"bytes,12,opt,name=fuelType,proto3" json:"fuelType,omitempty"`
	Availability     string                 `protobuf:"bytes,13,opt,name=availability,proto3" json:"availability,omitempty"`
	Condition        string                 `protobuf:"bytes,14,opt,name=condition,proto3" json:"condition,omitempty"`
	Cost             uint64                 `protobuf:"varint,15,opt,name=cost,proto3" json:"cost,omitempty"`
	Information      string                 `protobuf:"bytes,16,opt,name=information,proto3" json:"information,omitempty"`
	Placement        *Geo                   `protobuf:"bytes,17,opt,name=placement,proto3" json:"placement,omitempty"`
	Images           []string               `protobuf:"bytes,18,rep,name=images,proto3" json:"images,omitempty"`
	Currency         string                 `protobuf:"bytes,19,opt,name=currency,proto3" json:"currency,omitempty"`
	Phones           []string               `protobuf:"bytes,20,rep,name=phones,proto3" json:"phones,omitempty"`
	Emails           []string               `protobuf:"bytes,21,rep,name=emails,proto3" json:"emails,omitempty"`
	NumberPassengers uint32                 `protobuf:"varint,22,opt,name=numberPassengers,proto3" json:"numberPassengers,omitempty"`
	Powder           uint32                 `protobuf:"varint,23,opt,name=powder,proto3" json:"powder,omitempty"`
}

func (x *Transport) Reset() {
	*x = Transport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transport) ProtoMessage() {}

func (x *Transport) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transport.ProtoReflect.Descriptor instead.
func (*Transport) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{0}
}

func (x *Transport) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Transport) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Transport) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Transport) GetType() SalesType {
	if x != nil {
		return x.Type
	}
	return SalesType_sale
}

func (x *Transport) GetBrand() uint64 {
	if x != nil {
		return x.Brand
	}
	return 0
}

func (x *Transport) GetTransportType() uint64 {
	if x != nil {
		return x.TransportType
	}
	return 0
}

func (x *Transport) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Transport) GetReleaseYear() string {
	if x != nil {
		return x.ReleaseYear
	}
	return ""
}

func (x *Transport) GetEngine() uint32 {
	if x != nil {
		return x.Engine
	}
	return 0
}

func (x *Transport) GetTransmission() string {
	if x != nil {
		return x.Transmission
	}
	return ""
}

func (x *Transport) GetMileage() uint64 {
	if x != nil {
		return x.Mileage
	}
	return 0
}

func (x *Transport) GetFuelType() string {
	if x != nil {
		return x.FuelType
	}
	return ""
}

func (x *Transport) GetAvailability() string {
	if x != nil {
		return x.Availability
	}
	return ""
}

func (x *Transport) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

func (x *Transport) GetCost() uint64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *Transport) GetInformation() string {
	if x != nil {
		return x.Information
	}
	return ""
}

func (x *Transport) GetPlacement() *Geo {
	if x != nil {
		return x.Placement
	}
	return nil
}

func (x *Transport) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *Transport) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Transport) GetPhones() []string {
	if x != nil {
		return x.Phones
	}
	return nil
}

func (x *Transport) GetEmails() []string {
	if x != nil {
		return x.Emails
	}
	return nil
}

func (x *Transport) GetNumberPassengers() uint32 {
	if x != nil {
		return x.NumberPassengers
	}
	return 0
}

func (x *Transport) GetPowder() uint32 {
	if x != nil {
		return x.Powder
	}
	return 0
}

type TransportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TransportRequest) Reset() {
	*x = TransportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransportRequest) ProtoMessage() {}

func (x *TransportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransportRequest.ProtoReflect.Descriptor instead.
func (*TransportRequest) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{1}
}

func (x *TransportRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type TransportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *TransportResponse) Reset() {
	*x = TransportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransportResponse) ProtoMessage() {}

func (x *TransportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransportResponse.ProtoReflect.Descriptor instead.
func (*TransportResponse) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{2}
}

func (x *TransportResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TransportResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type FindTransportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type          SalesType `protobuf:"varint,1,opt,name=type,proto3,enum=api.SalesType" json:"type,omitempty"`
	Placement     *Geo      `protobuf:"bytes,2,opt,name=placement,proto3" json:"placement,omitempty"`
	Condition     string    `protobuf:"bytes,3,opt,name=condition,proto3" json:"condition,omitempty"`
	TransportType []uint64  `protobuf:"varint,4,rep,packed,name=transportType,proto3" json:"transportType,omitempty"`
	FuelType      []string  `protobuf:"bytes,5,rep,name=fuelType,proto3" json:"fuelType,omitempty"`
	Brand         []uint64  `protobuf:"varint,6,rep,packed,name=brand,proto3" json:"brand,omitempty"`
	CostFrom      uint64    `protobuf:"varint,7,opt,name=costFrom,proto3" json:"costFrom,omitempty"`
	CostTill      uint64    `protobuf:"varint,8,opt,name=costTill,proto3" json:"costTill,omitempty"`
	Limit         uint32    `protobuf:"varint,9,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        uint32    `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *FindTransportRequest) Reset() {
	*x = FindTransportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindTransportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindTransportRequest) ProtoMessage() {}

func (x *FindTransportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindTransportRequest.ProtoReflect.Descriptor instead.
func (*FindTransportRequest) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{3}
}

func (x *FindTransportRequest) GetType() SalesType {
	if x != nil {
		return x.Type
	}
	return SalesType_sale
}

func (x *FindTransportRequest) GetPlacement() *Geo {
	if x != nil {
		return x.Placement
	}
	return nil
}

func (x *FindTransportRequest) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

func (x *FindTransportRequest) GetTransportType() []uint64 {
	if x != nil {
		return x.TransportType
	}
	return nil
}

func (x *FindTransportRequest) GetFuelType() []string {
	if x != nil {
		return x.FuelType
	}
	return nil
}

func (x *FindTransportRequest) GetBrand() []uint64 {
	if x != nil {
		return x.Brand
	}
	return nil
}

func (x *FindTransportRequest) GetCostFrom() uint64 {
	if x != nil {
		return x.CostFrom
	}
	return 0
}

func (x *FindTransportRequest) GetCostTill() uint64 {
	if x != nil {
		return x.CostTill
	}
	return 0
}

func (x *FindTransportRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FindTransportRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type FindTransportResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               uint64                        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt        string                        `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        string                        `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Brand            string                        `protobuf:"bytes,4,opt,name=brand,proto3" json:"brand,omitempty"`
	TransportType    string                        `protobuf:"bytes,5,opt,name=transportType,proto3" json:"transportType,omitempty"`
	Model            string                        `protobuf:"bytes,6,opt,name=model,proto3" json:"model,omitempty"`
	ReleaseYear      string                        `protobuf:"bytes,7,opt,name=releaseYear,proto3" json:"releaseYear,omitempty"`
	Engine           string                        `protobuf:"bytes,8,opt,name=engine,proto3" json:"engine,omitempty"`
	Transmission     string                        `protobuf:"bytes,9,opt,name=transmission,proto3" json:"transmission,omitempty"`
	Mileage          uint64                        `protobuf:"varint,10,opt,name=mileage,proto3" json:"mileage,omitempty"`
	FuelType         string                        `protobuf:"bytes,11,opt,name=fuelType,proto3" json:"fuelType,omitempty"`
	Availability     string                        `protobuf:"bytes,12,opt,name=availability,proto3" json:"availability,omitempty"`
	SalesType        string                        `protobuf:"bytes,13,opt,name=salesType,proto3" json:"salesType,omitempty"`
	Condition        string                        `protobuf:"bytes,14,opt,name=condition,proto3" json:"condition,omitempty"`
	Cost             uint64                        `protobuf:"varint,15,opt,name=cost,proto3" json:"cost,omitempty"`
	Information      string                        `protobuf:"bytes,16,opt,name=information,proto3" json:"information,omitempty"`
	Location         *FindTransportResult_ShortGeo `protobuf:"bytes,17,opt,name=location,proto3" json:"location,omitempty"`
	Images           []string                      `protobuf:"bytes,18,rep,name=images,proto3" json:"images,omitempty"`
	Currency         string                        `protobuf:"bytes,19,opt,name=currency,proto3" json:"currency,omitempty"`
	Phones           []string                      `protobuf:"bytes,20,rep,name=phones,proto3" json:"phones,omitempty"`
	Emails           []string                      `protobuf:"bytes,21,rep,name=emails,proto3" json:"emails,omitempty"`
	NumberPassengers uint32                        `protobuf:"varint,22,opt,name=numberPassengers,proto3" json:"numberPassengers,omitempty"`
	Powder           uint32                        `protobuf:"varint,23,opt,name=powder,proto3" json:"powder,omitempty"`
	Owner            *FindTransportResult_Owner    `protobuf:"bytes,171,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *FindTransportResult) Reset() {
	*x = FindTransportResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindTransportResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindTransportResult) ProtoMessage() {}

func (x *FindTransportResult) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindTransportResult.ProtoReflect.Descriptor instead.
func (*FindTransportResult) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{4}
}

func (x *FindTransportResult) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FindTransportResult) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *FindTransportResult) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *FindTransportResult) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *FindTransportResult) GetTransportType() string {
	if x != nil {
		return x.TransportType
	}
	return ""
}

func (x *FindTransportResult) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *FindTransportResult) GetReleaseYear() string {
	if x != nil {
		return x.ReleaseYear
	}
	return ""
}

func (x *FindTransportResult) GetEngine() string {
	if x != nil {
		return x.Engine
	}
	return ""
}

func (x *FindTransportResult) GetTransmission() string {
	if x != nil {
		return x.Transmission
	}
	return ""
}

func (x *FindTransportResult) GetMileage() uint64 {
	if x != nil {
		return x.Mileage
	}
	return 0
}

func (x *FindTransportResult) GetFuelType() string {
	if x != nil {
		return x.FuelType
	}
	return ""
}

func (x *FindTransportResult) GetAvailability() string {
	if x != nil {
		return x.Availability
	}
	return ""
}

func (x *FindTransportResult) GetSalesType() string {
	if x != nil {
		return x.SalesType
	}
	return ""
}

func (x *FindTransportResult) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

func (x *FindTransportResult) GetCost() uint64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *FindTransportResult) GetInformation() string {
	if x != nil {
		return x.Information
	}
	return ""
}

func (x *FindTransportResult) GetLocation() *FindTransportResult_ShortGeo {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *FindTransportResult) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *FindTransportResult) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *FindTransportResult) GetPhones() []string {
	if x != nil {
		return x.Phones
	}
	return nil
}

func (x *FindTransportResult) GetEmails() []string {
	if x != nil {
		return x.Emails
	}
	return nil
}

func (x *FindTransportResult) GetNumberPassengers() uint32 {
	if x != nil {
		return x.NumberPassengers
	}
	return 0
}

func (x *FindTransportResult) GetPowder() uint32 {
	if x != nil {
		return x.Powder
	}
	return 0
}

func (x *FindTransportResult) GetOwner() *FindTransportResult_Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

type FindTransportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transports []*FindTransportResult `protobuf:"bytes,1,rep,name=transports,proto3" json:"transports,omitempty"`
	Found      uint64                 `protobuf:"varint,2,opt,name=found,proto3" json:"found,omitempty"`
}

func (x *FindTransportResponse) Reset() {
	*x = FindTransportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindTransportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindTransportResponse) ProtoMessage() {}

func (x *FindTransportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindTransportResponse.ProtoReflect.Descriptor instead.
func (*FindTransportResponse) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{5}
}

func (x *FindTransportResponse) GetTransports() []*FindTransportResult {
	if x != nil {
		return x.Transports
	}
	return nil
}

func (x *FindTransportResponse) GetFound() uint64 {
	if x != nil {
		return x.Found
	}
	return 0
}

type FindTransportResult_ShortGeo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type uint32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *FindTransportResult_ShortGeo) Reset() {
	*x = FindTransportResult_ShortGeo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindTransportResult_ShortGeo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindTransportResult_ShortGeo) ProtoMessage() {}

func (x *FindTransportResult_ShortGeo) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindTransportResult_ShortGeo.ProtoReflect.Descriptor instead.
func (*FindTransportResult_ShortGeo) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{4, 0}
}

func (x *FindTransportResult_ShortGeo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FindTransportResult_ShortGeo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FindTransportResult_ShortGeo) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type FindTransportResult_Owner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *FindTransportResult_Owner) Reset() {
	*x = FindTransportResult_Owner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_transport_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindTransportResult_Owner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindTransportResult_Owner) ProtoMessage() {}

func (x *FindTransportResult_Owner) ProtoReflect() protoreflect.Message {
	mi := &file_transport_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindTransportResult_Owner.ProtoReflect.Descriptor instead.
func (*FindTransportResult_Owner) Descriptor() ([]byte, []int) {
	return file_transport_proto_rawDescGZIP(), []int{4, 1}
}

func (x *FindTransportResult_Owner) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FindTransportResult_Owner) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_transport_proto protoreflect.FileDescriptor

var file_transport_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe3, 0x05, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x61, 0x6c,
	0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x20,
	0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x59, 0x65, 0x61, 0x72, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x59, 0x65, 0x61, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x69, 0x6c, 0x65, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d,
	0x69, 0x6c, 0x65, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x65, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x65, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x09, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x6f, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x12, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x73,
	0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65,
	0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x77, 0x64, 0x65, 0x72, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x70, 0x6f, 0x77, 0x64, 0x65, 0x72, 0x22, 0x22, 0x0a, 0x10, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3d,
	0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xbe, 0x02,
	0x0a, 0x14, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x61, 0x6c, 0x65, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x09, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x6f, 0x52, 0x09, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x65, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x65, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x73, 0x74,
	0x46, 0x72, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x6f, 0x73, 0x74,
	0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x73, 0x74, 0x54, 0x69, 0x6c, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x6f, 0x73, 0x74, 0x54, 0x69, 0x6c, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0xee,
	0x06, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x59, 0x65, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x59, 0x65, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6c, 0x65, 0x61, 0x67, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x69, 0x6c, 0x65, 0x61, 0x67, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x75, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x75, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x76,
	0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x73, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3d, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x47, 0x65, 0x6f, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x14, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x61, 0x73,
	0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x65, 0x6e, 0x67, 0x65, 0x72, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x6f, 0x77, 0x64, 0x65, 0x72, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x70, 0x6f, 0x77, 0x64, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0xab, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x1a, 0x42,
	0x0a, 0x08, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x47, 0x65, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x1a, 0x2b, 0x0a, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x67, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x2a, 0x2c, 0x0a, 0x09, 0x53, 0x61, 0x6c, 0x65,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x65, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x72, 0x65, 0x6e, 0x74, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x6c, 0x65, 0x61,
	0x73, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x32, 0xb0, 0x02, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x03, 0x47,
	0x65, 0x74, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f,
	0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x04, 0x46, 0x69, 0x6e, 0x64, 0x12, 0x19, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x06, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39,
	0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x06, 0x5a, 0x04, 0x2f, 0x61, 0x70,
	0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_transport_proto_rawDescOnce sync.Once
	file_transport_proto_rawDescData = file_transport_proto_rawDesc
)

func file_transport_proto_rawDescGZIP() []byte {
	file_transport_proto_rawDescOnce.Do(func() {
		file_transport_proto_rawDescData = protoimpl.X.CompressGZIP(file_transport_proto_rawDescData)
	})
	return file_transport_proto_rawDescData
}

var file_transport_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_transport_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_transport_proto_goTypes = []interface{}{
	(SalesType)(0),                       // 0: api.SalesType
	(*Transport)(nil),                    // 1: api.Transport
	(*TransportRequest)(nil),             // 2: api.TransportRequest
	(*TransportResponse)(nil),            // 3: api.TransportResponse
	(*FindTransportRequest)(nil),         // 4: api.FindTransportRequest
	(*FindTransportResult)(nil),          // 5: api.FindTransportResult
	(*FindTransportResponse)(nil),        // 6: api.FindTransportResponse
	(*FindTransportResult_ShortGeo)(nil), // 7: api.FindTransportResult.ShortGeo
	(*FindTransportResult_Owner)(nil),    // 8: api.FindTransportResult.Owner
	(*timestamppb.Timestamp)(nil),        // 9: google.protobuf.Timestamp
	(*Geo)(nil),                          // 10: api.Geo
}
var file_transport_proto_depIdxs = []int32{
	9,  // 0: api.Transport.created_at:type_name -> google.protobuf.Timestamp
	9,  // 1: api.Transport.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 2: api.Transport.type:type_name -> api.SalesType
	10, // 3: api.Transport.placement:type_name -> api.Geo
	0,  // 4: api.FindTransportRequest.type:type_name -> api.SalesType
	10, // 5: api.FindTransportRequest.placement:type_name -> api.Geo
	7,  // 6: api.FindTransportResult.location:type_name -> api.FindTransportResult.ShortGeo
	8,  // 7: api.FindTransportResult.owner:type_name -> api.FindTransportResult.Owner
	5,  // 8: api.FindTransportResponse.transports:type_name -> api.FindTransportResult
	2,  // 9: api.TransportService.Get:input_type -> api.TransportRequest
	4,  // 10: api.TransportService.Find:input_type -> api.FindTransportRequest
	1,  // 11: api.TransportService.Create:input_type -> api.Transport
	1,  // 12: api.TransportService.Update:input_type -> api.Transport
	2,  // 13: api.TransportService.Delete:input_type -> api.TransportRequest
	5,  // 14: api.TransportService.Get:output_type -> api.FindTransportResult
	6,  // 15: api.TransportService.Find:output_type -> api.FindTransportResponse
	3,  // 16: api.TransportService.Create:output_type -> api.TransportResponse
	3,  // 17: api.TransportService.Update:output_type -> api.TransportResponse
	3,  // 18: api.TransportService.Delete:output_type -> api.TransportResponse
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_transport_proto_init() }
func file_transport_proto_init() {
	if File_transport_proto != nil {
		return
	}
	file_cargo_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_transport_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindTransportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindTransportResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindTransportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindTransportResult_ShortGeo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_transport_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindTransportResult_Owner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_transport_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_transport_proto_goTypes,
		DependencyIndexes: file_transport_proto_depIdxs,
		EnumInfos:         file_transport_proto_enumTypes,
		MessageInfos:      file_transport_proto_msgTypes,
	}.Build()
	File_transport_proto = out.File
	file_transport_proto_rawDesc = nil
	file_transport_proto_goTypes = nil
	file_transport_proto_depIdxs = nil
}

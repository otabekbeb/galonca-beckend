// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.9.2
// source: cargo.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GeoGeoType int32

const (
	Geo_city    GeoGeoType = 0
	Geo_region  GeoGeoType = 1
	Geo_country GeoGeoType = 2
)

// Enum value maps for GeoGeoType.
var (
	GeoGeoType_name = map[int32]string{
		0: "city",
		1: "region",
		2: "country",
	}
	GeoGeoType_value = map[string]int32{
		"city":    0,
		"region":  1,
		"country": 2,
	}
)

func (x GeoGeoType) Enum() *GeoGeoType {
	p := new(GeoGeoType)
	*p = x
	return p
}

func (x GeoGeoType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GeoGeoType) Descriptor() protoreflect.EnumDescriptor {
	return file_cargo_proto_enumTypes[0].Descriptor()
}

func (GeoGeoType) Type() protoreflect.EnumType {
	return &file_cargo_proto_enumTypes[0]
}

func (x GeoGeoType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GeoGeoType.Descriptor instead.
func (GeoGeoType) EnumDescriptor() ([]byte, []int) {
	return file_cargo_proto_rawDescGZIP(), []int{3, 0}
}

type Cargo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	LoadingPoints    []uint64               `protobuf:"varint,4,rep,packed,name=loadingPoints,proto3" json:"loadingPoints,omitempty"`
	UnloadingPoints  []uint64               `protobuf:"varint,5,rep,packed,name=unloadingPoints,proto3" json:"unloadingPoints,omitempty"`
	From             *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=from,proto3" json:"from,omitempty"`
	Till             *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=till,proto3" json:"till,omitempty"`
	Weight           uint32                 `protobuf:"varint,8,opt,name=weight,proto3" json:"weight,omitempty"`
	Volume           uint32                 `protobuf:"varint,9,opt,name=volume,proto3" json:"volume,omitempty"`
	Cost             uint32                 `protobuf:"varint,10,opt,name=cost,proto3" json:"cost,omitempty"`
	TransportType    []string               `protobuf:"bytes,11,rep,name=transportType,proto3" json:"transportType,omitempty"`
	LoadingType      []string               `protobuf:"bytes,12,rep,name=loadingType,proto3" json:"loadingType,omitempty"`
	Addition         []string               `protobuf:"bytes,13,rep,name=addition,proto3" json:"addition,omitempty"`
	AdditionalPhones []string               `protobuf:"bytes,14,rep,name=additionalPhones,proto3" json:"additionalPhones,omitempty"`
	AdditionalMails  []string               `protobuf:"bytes,15,rep,name=additionalMails,proto3" json:"additionalMails,omitempty"`
	Currency         string                 `protobuf:"bytes,16,opt,name=currency,proto3" json:"currency,omitempty"`
	CargoType        uint64                 `protobuf:"varint,17,opt,name=cargoType,proto3" json:"cargoType,omitempty"`
}

func (x *Cargo) Reset() {
	*x = Cargo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cargo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cargo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cargo) ProtoMessage() {}

func (x *Cargo) ProtoReflect() protoreflect.Message {
	mi := &file_cargo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cargo.ProtoReflect.Descriptor instead.
func (*Cargo) Descriptor() ([]byte, []int) {
	return file_cargo_proto_rawDescGZIP(), []int{0}
}

func (x *Cargo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Cargo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Cargo) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Cargo) GetLoadingPoints() []uint64 {
	if x != nil {
		return x.LoadingPoints
	}
	return nil
}

func (x *Cargo) GetUnloadingPoints() []uint64 {
	if x != nil {
		return x.UnloadingPoints
	}
	return nil
}

func (x *Cargo) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Cargo) GetTill() *timestamppb.Timestamp {
	if x != nil {
		return x.Till
	}
	return nil
}

func (x *Cargo) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *Cargo) GetVolume() uint32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *Cargo) GetCost() uint32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *Cargo) GetTransportType() []string {
	if x != nil {
		return x.TransportType
	}
	return nil
}

func (x *Cargo) GetLoadingType() []string {
	if x != nil {
		return x.LoadingType
	}
	return nil
}

func (x *Cargo) GetAddition() []string {
	if x != nil {
		return x.Addition
	}
	return nil
}

func (x *Cargo) GetAdditionalPhones() []string {
	if x != nil {
		return x.AdditionalPhones
	}
	return nil
}

func (x *Cargo) GetAdditionalMails() []string {
	if x != nil {
		return x.AdditionalMails
	}
	return nil
}

func (x *Cargo) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Cargo) GetCargoType() uint64 {
	if x != nil {
		return x.CargoType
	}
	return 0
}

type CargoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CargoRequest) Reset() {
	*x = CargoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cargo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CargoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CargoRequest) ProtoMessage() {}

func (x *CargoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cargo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CargoRequest.ProtoReflect.Descriptor instead.
func (*CargoRequest) Descriptor() ([]byte, []int) {
	return file_cargo_proto_rawDescGZIP(), []int{1}
}

func (x *CargoRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CargoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *CargoResponse) Reset() {
	*x = CargoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cargo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CargoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CargoResponse) ProtoMessage() {}

func (x *CargoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cargo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CargoResponse.ProtoReflect.Descriptor instead.
func (*CargoResponse) Descriptor() ([]byte, []int) {
	return file_cargo_proto_rawDescGZIP(), []int{2}
}

func (x *CargoResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CargoResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type Geo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeoId uint64     `protobuf:"varint,1,opt,name=geo_id,json=geoId,proto3" json:"geo_id,omitempty"`
	Type  GeoGeoType `protobuf:"varint,2,opt,name=type,proto3,enum=api.GeoGeoType" json:"type,omitempty"`
}

func (x *Geo) Reset() {
	*x = Geo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cargo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Geo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Geo) ProtoMessage() {}

func (x *Geo) ProtoReflect() protoreflect.Message {
	mi := &file_cargo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Geo.ProtoReflect.Descriptor instead.
func (*Geo) Descriptor() ([]byte, []int) {
	return file_cargo_proto_rawDescGZIP(), []int{3}
}

func (x *Geo) GetGeoId() uint64 {
	if x != nil {
		return x.GeoId
	}
	return 0
}

func (x *Geo) GetType() GeoGeoType {
	if x != nil {
		return x.Type
	}
	return Geo_city
}

type FindCargoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GeoFrom     []*Geo                 `protobuf:"bytes,1,rep,name=geo_from,json=geoFrom,proto3" json:"geo_from,omitempty"`
	GeoTo       []*Geo                 `protobuf:"bytes,2,rep,name=geo_to,json=geoTo,proto3" json:"geo_to,omitempty"`
	WeightFrom  uint32                 `protobuf:"varint,3,opt,name=weight_from,json=weightFrom,proto3" json:"weight_from,omitempty"`
	WeightTo    uint32                 `protobuf:"varint,4,opt,name=weight_to,json=weightTo,proto3" json:"weight_to,omitempty"`
	VolumeFrom  uint32                 `protobuf:"varint,5,opt,name=volume_from,json=volumeFrom,proto3" json:"volume_from,omitempty"`
	VolumeTo    uint32                 `protobuf:"varint,6,opt,name=volume_to,json=volumeTo,proto3" json:"volume_to,omitempty"`
	From        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=from,proto3" json:"from,omitempty"`
	Till        *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=till,proto3" json:"till,omitempty"`
	Limit       uint32                 `protobuf:"varint,9,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset      uint32                 `protobuf:"varint,10,opt,name=offset,proto3" json:"offset,omitempty"`
	TypeLoading []uint32               `protobuf:"varint,11,rep,packed,name=typeLoading,proto3" json:"typeLoading,omitempty"`
	TimeFilter  *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=time_filter,json=timeFilter,proto3" json:"time_filter,omitempty"`
	CargoType   uint64                 `protobuf:"varint,13,opt,name=cargoType,proto3" json:"cargoType,omitempty"`
}

func (x *FindCargoRequest) Reset() {
	*x = FindCargoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cargo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindCargoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCargoRequest) ProtoMessage() {}

func (x *FindCargoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cargo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCargoRequest.ProtoReflect.Descriptor instead.
func (*FindCargoRequest) Descriptor() ([]byte, []int) {
	return file_cargo_proto_rawDescGZIP(), []int{4}
}

func (x *FindCargoRequest) GetGeoFrom() []*Geo {
	if x != nil {
		return x.GeoFrom
	}
	return nil
}

func (x *FindCargoRequest) GetGeoTo() []*Geo {
	if x != nil {
		return x.GeoTo
	}
	return nil
}

func (x *FindCargoRequest) GetWeightFrom() uint32 {
	if x != nil {
		return x.WeightFrom
	}
	return 0
}

func (x *FindCargoRequest) GetWeightTo() uint32 {
	if x != nil {
		return x.WeightTo
	}
	return 0
}

func (x *FindCargoRequest) GetVolumeFrom() uint32 {
	if x != nil {
		return x.VolumeFrom
	}
	return 0
}

func (x *FindCargoRequest) GetVolumeTo() uint32 {
	if x != nil {
		return x.VolumeTo
	}
	return 0
}

func (x *FindCargoRequest) GetFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *FindCargoRequest) GetTill() *timestamppb.Timestamp {
	if x != nil {
		return x.Till
	}
	return nil
}

func (x *FindCargoRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FindCargoRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FindCargoRequest) GetTypeLoading() []uint32 {
	if x != nil {
		return x.TypeLoading
	}
	return nil
}

func (x *FindCargoRequest) GetTimeFilter() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeFilter
	}
	return nil
}

func (x *FindCargoRequest) GetCargoType() uint64 {
	if x != nil {
		return x.CargoType
	}
	return 0
}

type FindCargoResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               uint64                      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt        string                      `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        string                      `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	LoadingPoints    []*FindCargoResult_ShortGeo `protobuf:"bytes,4,rep,name=loadingPoints,proto3" json:"loadingPoints,omitempty"`
	UnloadingPoints  []*FindCargoResult_ShortGeo `protobuf:"bytes,5,rep,name=unloadingPoints,proto3" json:"unloadingPoints,omitempty"`
	From             string                      `protobuf:"bytes,6,opt,name=from,proto3" json:"from,omitempty"`
	Till             string                      `protobuf:"bytes,7,opt,name=till,proto3" json:"till,omitempty"`
	Weight           uint32                      `protobuf:"varint,8,opt,name=weight,proto3" json:"weight,omitempty"`
	Volume           uint32                      `protobuf:"varint,9,opt,name=volume,proto3" json:"volume,omitempty"`
	Cost             uint32                      `protobuf:"varint,10,opt,name=cost,proto3" json:"cost,omitempty"`
	TransportType    []string                    `protobuf:"bytes,11,rep,name=transportType,proto3" json:"transportType,omitempty"`
	LoadingType      []string                    `protobuf:"bytes,12,rep,name=loadingType,proto3" json:"loadingType,omitempty"`
	Addition         []string                    `protobuf:"bytes,13,rep,name=addition,proto3" json:"addition,omitempty"`
	AdditionalPhones []string                    `protobuf:"bytes,14,rep,name=additionalPhones,proto3" json:"additionalPhones,omitempty"`
	AdditionalMails  []string                    `protobuf:"bytes,15,rep,name=additionalMails,proto3" json:"additionalMails,omitempty"`
	Currency         string                      `protobuf:"bytes,16,opt,name=currency,proto3" json:"currency,omitempty"`
	Owner            *FindCargoResult_Owner      `protobuf:"bytes,17,opt,name=owner,proto3" json:"owner,omitempty"`
	CargoType        string                      `protobuf:"bytes,18,opt,name=cargoType,proto3" json:"cargoType,omitempty"`
}

func (x *FindCargoResult) Reset() {
	*x = FindCargoResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cargo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindCargoResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCargoResult) ProtoMessage() {}

func (x *FindCargoResult) ProtoReflect() protoreflect.Message {
	mi := &file_cargo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCargoResult.ProtoReflect.Descriptor instead.
func (*FindCargoResult) Descriptor() ([]byte, []int) {
	return file_cargo_proto_rawDescGZIP(), []int{5}
}

func (x *FindCargoResult) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FindCargoResult) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *FindCargoResult) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *FindCargoResult) GetLoadingPoints() []*FindCargoResult_ShortGeo {
	if x != nil {
		return x.LoadingPoints
	}
	return nil
}

func (x *FindCargoResult) GetUnloadingPoints() []*FindCargoResult_ShortGeo {
	if x != nil {
		return x.UnloadingPoints
	}
	return nil
}

func (x *FindCargoResult) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *FindCargoResult) GetTill() string {
	if x != nil {
		return x.Till
	}
	return ""
}

func (x *FindCargoResult) GetWeight() uint32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *FindCargoResult) GetVolume() uint32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *FindCargoResult) GetCost() uint32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *FindCargoResult) GetTransportType() []string {
	if x != nil {
		return x.TransportType
	}
	return nil
}

func (x *FindCargoResult) GetLoadingType() []string {
	if x != nil {
		return x.LoadingType
	}
	return nil
}

func (x *FindCargoResult) GetAddition() []string {
	if x != nil {
		return x.Addition
	}
	return nil
}

func (x *FindCargoResult) GetAdditionalPhones() []string {
	if x != nil {
		return x.AdditionalPhones
	}
	return nil
}

func (x *FindCargoResult) GetAdditionalMails() []string {
	if x != nil {
		return x.AdditionalMails
	}
	return nil
}

func (x *FindCargoResult) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *FindCargoResult) GetOwner() *FindCargoResult_Owner {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *FindCargoResult) GetCargoType() string {
	if x != nil {
		return x.CargoType
	}
	return ""
}

type FindCargoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cargos []*FindCargoResult `protobuf:"bytes,1,rep,name=cargos,proto3" json:"cargos,omitempty"`
	Found  uint64             `protobuf:"varint,2,opt,name=found,proto3" json:"found,omitempty"`
}

func (x *FindCargoResponse) Reset() {
	*x = FindCargoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cargo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindCargoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCargoResponse) ProtoMessage() {}

func (x *FindCargoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cargo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCargoResponse.ProtoReflect.Descriptor instead.
func (*FindCargoResponse) Descriptor() ([]byte, []int) {
	return file_cargo_proto_rawDescGZIP(), []int{6}
}

func (x *FindCargoResponse) GetCargos() []*FindCargoResult {
	if x != nil {
		return x.Cargos
	}
	return nil
}

func (x *FindCargoResponse) GetFound() uint64 {
	if x != nil {
		return x.Found
	}
	return 0
}

type FindCargoResult_ShortGeo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type uint32 `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *FindCargoResult_ShortGeo) Reset() {
	*x = FindCargoResult_ShortGeo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cargo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindCargoResult_ShortGeo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCargoResult_ShortGeo) ProtoMessage() {}

func (x *FindCargoResult_ShortGeo) ProtoReflect() protoreflect.Message {
	mi := &file_cargo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCargoResult_ShortGeo.ProtoReflect.Descriptor instead.
func (*FindCargoResult_ShortGeo) Descriptor() ([]byte, []int) {
	return file_cargo_proto_rawDescGZIP(), []int{5, 0}
}

func (x *FindCargoResult_ShortGeo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FindCargoResult_ShortGeo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FindCargoResult_ShortGeo) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

type FindCargoResult_Owner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *FindCargoResult_Owner) Reset() {
	*x = FindCargoResult_Owner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cargo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindCargoResult_Owner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCargoResult_Owner) ProtoMessage() {}

func (x *FindCargoResult_Owner) ProtoReflect() protoreflect.Message {
	mi := &file_cargo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCargoResult_Owner.ProtoReflect.Descriptor instead.
func (*FindCargoResult_Owner) Descriptor() ([]byte, []int) {
	return file_cargo_proto_rawDescGZIP(), []int{5, 1}
}

func (x *FindCargoResult_Owner) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FindCargoResult_Owner) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_cargo_proto protoreflect.FileDescriptor

var file_cargo_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61,
	0x70, 0x69, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xf5, 0x04, 0x0a, 0x05, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0d, 0x6c, 0x6f, 0x61, 0x64,
	0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x0f, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6c, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74,
	0x69, 0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x73, 0x18,
	0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4d, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4d, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x22, 0x1e, 0x0a, 0x0c, 0x43,
	0x61, 0x72, 0x67, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x0d, 0x43,
	0x61, 0x72, 0x67, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x72, 0x0a, 0x03, 0x47, 0x65, 0x6f, 0x12, 0x15, 0x0a,
	0x06, 0x67, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x67,
	0x65, 0x6f, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x6f, 0x2e, 0x67, 0x65, 0x6f,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x2d, 0x0a, 0x08, 0x67,
	0x65, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x10, 0x02, 0x22, 0xdf, 0x03, 0x0a, 0x10, 0x46,
	0x69, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x08, 0x67, 0x65, 0x6f, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x6f, 0x52, 0x07, 0x67, 0x65, 0x6f,
	0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1f, 0x0a, 0x06, 0x67, 0x65, 0x6f, 0x5f, 0x74, 0x6f, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x6f, 0x52, 0x05,
	0x67, 0x65, 0x6f, 0x54, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x5f, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x54, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x46, 0x72, 0x6f, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x74,
	0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x54,
	0x6f, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x69, 0x6c, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6c,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x0d, 0x52, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x3b, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x22, 0xf0, 0x05, 0x0a,
	0x0f, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x43,
	0x0a, 0x0d, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x43, 0x61, 0x72, 0x67, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x47, 0x65, 0x6f, 0x52, 0x0d, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x12, 0x47, 0x0a, 0x0f, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x47, 0x65, 0x6f, 0x52, 0x0f, 0x75, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6c, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x69, 0x6c, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10,
	0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x73,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4d, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4d, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x30,
	0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x42,
	0x0a, 0x08, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x47, 0x65, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x1a, 0x2b, 0x0a, 0x05, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x57, 0x0a, 0x11, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x67, 0x6f, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43,
	0x61, 0x72, 0x67, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x63, 0x61, 0x72, 0x67,
	0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x32, 0x84, 0x02, 0x0a, 0x0c, 0x43, 0x61, 0x72,
	0x67, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x03, 0x47, 0x65, 0x74,
	0x12, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x61,
	0x72, 0x67, 0x6f, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x04, 0x46,
	0x69, 0x6e, 0x64, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x61,
	0x72, 0x67, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0a,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x2a, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x61, 0x72, 0x67, 0x6f, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x72,
	0x67, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x06,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x72,
	0x67, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x43, 0x61, 0x72, 0x67, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x06, 0x5a, 0x04, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cargo_proto_rawDescOnce sync.Once
	file_cargo_proto_rawDescData = file_cargo_proto_rawDesc
)

func file_cargo_proto_rawDescGZIP() []byte {
	file_cargo_proto_rawDescOnce.Do(func() {
		file_cargo_proto_rawDescData = protoimpl.X.CompressGZIP(file_cargo_proto_rawDescData)
	})
	return file_cargo_proto_rawDescData
}

var file_cargo_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cargo_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_cargo_proto_goTypes = []interface{}{
	(GeoGeoType)(0),                  // 0: api.Geo.geo_type
	(*Cargo)(nil),                    // 1: api.Cargo
	(*CargoRequest)(nil),             // 2: api.CargoRequest
	(*CargoResponse)(nil),            // 3: api.CargoResponse
	(*Geo)(nil),                      // 4: api.Geo
	(*FindCargoRequest)(nil),         // 5: api.FindCargoRequest
	(*FindCargoResult)(nil),          // 6: api.FindCargoResult
	(*FindCargoResponse)(nil),        // 7: api.FindCargoResponse
	(*FindCargoResult_ShortGeo)(nil), // 8: api.FindCargoResult.ShortGeo
	(*FindCargoResult_Owner)(nil),    // 9: api.FindCargoResult.Owner
	(*timestamppb.Timestamp)(nil),    // 10: google.protobuf.Timestamp
}
var file_cargo_proto_depIdxs = []int32{
	10, // 0: api.Cargo.created_at:type_name -> google.protobuf.Timestamp
	10, // 1: api.Cargo.updated_at:type_name -> google.protobuf.Timestamp
	10, // 2: api.Cargo.from:type_name -> google.protobuf.Timestamp
	10, // 3: api.Cargo.till:type_name -> google.protobuf.Timestamp
	0,  // 4: api.Geo.type:type_name -> api.Geo.geo_type
	4,  // 5: api.FindCargoRequest.geo_from:type_name -> api.Geo
	4,  // 6: api.FindCargoRequest.geo_to:type_name -> api.Geo
	10, // 7: api.FindCargoRequest.from:type_name -> google.protobuf.Timestamp
	10, // 8: api.FindCargoRequest.till:type_name -> google.protobuf.Timestamp
	10, // 9: api.FindCargoRequest.time_filter:type_name -> google.protobuf.Timestamp
	8,  // 10: api.FindCargoResult.loadingPoints:type_name -> api.FindCargoResult.ShortGeo
	8,  // 11: api.FindCargoResult.unloadingPoints:type_name -> api.FindCargoResult.ShortGeo
	9,  // 12: api.FindCargoResult.owner:type_name -> api.FindCargoResult.Owner
	6,  // 13: api.FindCargoResponse.cargos:type_name -> api.FindCargoResult
	2,  // 14: api.CargoService.Get:input_type -> api.CargoRequest
	5,  // 15: api.CargoService.Find:input_type -> api.FindCargoRequest
	1,  // 16: api.CargoService.Create:input_type -> api.Cargo
	1,  // 17: api.CargoService.Update:input_type -> api.Cargo
	2,  // 18: api.CargoService.Delete:input_type -> api.CargoRequest
	6,  // 19: api.CargoService.Get:output_type -> api.FindCargoResult
	7,  // 20: api.CargoService.Find:output_type -> api.FindCargoResponse
	3,  // 21: api.CargoService.Create:output_type -> api.CargoResponse
	3,  // 22: api.CargoService.Update:output_type -> api.CargoResponse
	3,  // 23: api.CargoService.Delete:output_type -> api.CargoResponse
	19, // [19:24] is the sub-list for method output_type
	14, // [14:19] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_cargo_proto_init() }
func file_cargo_proto_init() {
	if File_cargo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cargo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cargo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cargo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CargoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cargo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CargoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cargo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Geo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cargo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindCargoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cargo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindCargoResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cargo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindCargoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cargo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindCargoResult_ShortGeo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cargo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindCargoResult_Owner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cargo_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cargo_proto_goTypes,
		DependencyIndexes: file_cargo_proto_depIdxs,
		EnumInfos:         file_cargo_proto_enumTypes,
		MessageInfos:      file_cargo_proto_msgTypes,
	}.Build()
	File_cargo_proto = out.File
	file_cargo_proto_rawDesc = nil
	file_cargo_proto_goTypes = nil
	file_cargo_proto_depIdxs = nil
}
